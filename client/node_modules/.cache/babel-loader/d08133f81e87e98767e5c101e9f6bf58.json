{"ast":null,"code":"import _asyncToGenerator from\"/home/linux/learn with sumit/4/think-in-a-redux-way/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/linux/learn with sumit/4/think-in-a-redux-way/client/node_modules/@babel/runtime/regenerator/index.js\";import{updateTitle}from\"../actions\";var updatedText=function updatedText(todoId,titleText){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,todo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://assignment-4todo.herokuapp.com/todos/\".concat(todoId),{method:\"PATCH\",body:JSON.stringify({text:titleText}),headers:{\"Content-type\":\"application/json;charset=UTF-8\"}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:todo=_context.sent;dispatch(updateTitle(todo.id,titleText));case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export default updatedText;","map":{"version":3,"sources":["/home/linux/learn with sumit/4/think-in-a-redux-way/client/src/redux/todos/thunk/updateText.js"],"names":["updateTitle","updatedText","todoId","titleText","dispatch","fetch","method","body","JSON","stringify","text","headers","response","json","todo","id"],"mappings":"mSAAA,OAASA,WAAT,KAA4B,YAA5B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAASC,SAAT,CAAuB,CACzC,+FAAO,iBAAOC,QAAP,0JACkBC,CAAAA,KAAK,wDAAiDH,MAAjD,EAA2D,CACrFI,MAAM,CAAE,OAD6E,CAErFC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,IAAI,CAAEP,SADa,CAAf,CAF+E,CAKrFQ,OAAO,CAAE,CAAE,eAAgB,gCAAlB,CAL4E,CAA3D,CADvB,QACCC,QADD,qCAQcA,CAAAA,QAAQ,CAACC,IAAT,EARd,QAQCC,IARD,eASLV,QAAQ,CAACJ,WAAW,CAACc,IAAI,CAACC,EAAN,CAAUZ,SAAV,CAAZ,CAAR,CATK,sDAAP,+DAWD,CAZD,CAcA,cAAeF,CAAAA,WAAf","sourcesContent":["import { updateTitle } from \"../actions\";\n\nconst updatedText = (todoId, titleText) => {\n  return async (dispatch) => {\n    const response = await fetch(`https://assignment-4todo.herokuapp.com/todos/${todoId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        text: titleText,\n      }),\n      headers: { \"Content-type\": \"application/json;charset=UTF-8\" },\n    });\n    const todo = await response.json();\n    dispatch(updateTitle(todo.id, titleText));\n  };\n};\n\nexport default updatedText;\n"]},"metadata":{},"sourceType":"module"}