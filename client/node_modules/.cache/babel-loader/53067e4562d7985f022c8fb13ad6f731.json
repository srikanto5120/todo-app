{"ast":null,"code":"var _jsxFileName = \"/home/linux/learn with sumit/4/think-in-a-redux-way/client/src/components/CompleteTodos.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport fetchTodos from \"../redux/todos/thunk/fechTodos\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CompleTedTodos() {\n  _s();\n\n  const todos = useSelector(state => state.todos);\n  const filters = useSelector(state => state.filters);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(completeTodo);\n  }, [dispatch]);\n\n  const filterByStatus = todo => {};\n\n  const filterByColors = todo => {\n    const {\n      colors\n    } = filters;\n\n    if (colors.length > 0) {\n      return colors.includes(todo === null || todo === void 0 ? void 0 : todo.color);\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-3xl shadow-lg rounded-lg p-6 bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"  text-gray-700 text-sm max-h-[300px] overflow-y-auto\",\n      children: todos.filter(filterByStatus).filter(filterByColors).map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CompleTedTodos, \"A7PQOFl+U4G6m+eaQX4VFFyaSwQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CompleTedTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompleTedTodos\");","map":{"version":3,"sources":["/home/linux/learn with sumit/4/think-in-a-redux-way/client/src/components/CompleteTodos.js"],"names":["useEffect","useDispatch","useSelector","fetchTodos","Todo","CompleTedTodos","todos","state","filters","dispatch","completeTodo","filterByStatus","todo","filterByColors","colors","length","includes","color","filter","map","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAGA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,OAAO,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA3B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACC,YAAD,CAAR;AACD,GAFQ,EAEN,CAACD,QAAD,CAFM,CAAT;;AAIA,QAAME,cAAc,GAAIC,IAAD,IAAU,CAEhC,CAFD;;AAIA,QAAMC,cAAc,GAAID,IAAD,IAAU;AAC/B,UAAM;AAAEE,MAAAA;AAAF,QAAaN,OAAnB;;AACA,QAAIM,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAyB;AACvB,aAAOD,MAAM,CAACE,QAAP,CAAgBJ,IAAhB,aAAgBA,IAAhB,uBAAgBA,IAAI,CAAEK,KAAtB,CAAP;AACD;;AACD,WAAO,IAAP;AACD,GAND;;AAQA,sBACE;AAAM,IAAA,SAAS,EAAC,oDAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,gBACGX,KAAK,CACHY,MADF,CACSP,cADT,EAEEO,MAFF,CAESL,cAFT,EAGEM,GAHF,CAGOP,IAAD,iBACH,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ,SAAuBA,IAAI,CAACQ,EAA5B;AAAA;AAAA;AAAA;AAAA,cAJH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjCuBf,c;UACRH,W,EACEA,W,EACCD,W;;;KAHKI,c","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport fetchTodos from \"../redux/todos/thunk/fechTodos\";\n \n\nimport Todo from \"./Todo\";\n\nexport default function CompleTedTodos() {\n  const todos = useSelector((state) => state.todos);\n  const filters = useSelector((state) => state.filters);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(completeTodo);\n  }, [dispatch]);\n\n  const filterByStatus = (todo) => {\n   \n  };\n\n  const filterByColors = (todo) => {\n    const { colors } = filters;\n    if (colors.length > 0  ) {\n      return colors.includes(todo?.color);\n    }\n    return true;\n  };\n\n  return (\n    <div  className=\"w-full max-w-3xl shadow-lg rounded-lg p-6 bg-white\">\n      <div className=\"  text-gray-700 text-sm max-h-[300px] overflow-y-auto\">\n        {todos\n          .filter(filterByStatus)\n          .filter(filterByColors)\n          .map((todo) => (\n            <Todo todo={todo} key={todo.id} />\n          ))}\n          \n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}